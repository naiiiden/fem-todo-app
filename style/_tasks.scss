@import './mixins.scss';

.error-indicator {
    border-radius: .375rem;
    background: var(--bg-primary);
    font-size: clamp(.875rem, 3vw, 1.125rem);
    color: var(--error);
    text-align: center;
    padding: 1.125rem;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    transition: .2s;
}

.empty-list-container {
    @extend .error-indicator;
    padding: 2.25rem;
    color: var(--text-primary);
    transition: .2s;

    p {
        margin-top: 2.25rem;
    }
}

.tasks-buttons-wrapper {
    border-radius: .375rem;
    background: var(--bg-primary);
    font-size: clamp(.875rem, 3vw, 1.125rem);
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    transition: .2s;

    li {
        padding: 1.125rem 1.375rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        color: var(--text-primary);
        position: relative;
        transition: .2s;
        cursor: pointer;

        &:active {
            cursor: move;
        }

        &.animation-submit {
            animation: submit .5s;

            @keyframes submit {
                0% {
                    transform: translateX(150px);
                    opacity: .1;
                }
                
                100% {
                    transform: translateX(0);
                }
            }
        }

        &.animation-delete {
            user-select: none;
            pointer-events: none;
            animation: delete .5s;
    
            @keyframes delete {
                0% {
                    transform: translateX(0);
                }

                50% {
                    opacity: 0.1;
                }

                75% {
                    opacity: 0;
                }
                
                100% {
                    transform: translateX(150px);
                    opacity: 0;
                }
            }
        }

        input {
            appearance: none;
            @include inputSize;
            background: none;
            border: 1px solid var(--input-border);
            position: absolute;
            top: 50%;
            border-radius: 50%;
            transform: translateY(-50%);
            transition: .2s;

            &:hover:not(:checked), &:focus-visible:not(:checked) {
                @include inputBackground(var(--bg-primary), var(--bg-primary));
                transition: .2s;
            }

            &:checked {
                @include inputBackground;
            }

            &:checked::after {
                display: block;
            }
            
            &::after {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                display: none;
                width: 100%;
                height: 100%;
                background: url('../images/icon-check.svg') no-repeat;
                background-position: center center;
                transition: .2s;
            }
        }

        input:checked + label {
            text-decoration: line-through;
            color: var(--text-checked);
            transition: .2s;
        }

        label {
            width: 100%;
            margin-left: 2.75rem;
            cursor: pointer;
        }

        button {
            margin-left: auto;
            border: none;
            width: clamp(1rem, 5vw, 1.125rem);
            height: clamp(1rem, 5vw, 1.125rem);
            background: url('../images/icon-cross.svg');
            background-size: 100% 100%;
        }
    }

    .tasks-left-button-container {
        padding: 1.125rem 1.375rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        color: var(--text-secondary);
        transition: .2s;

        button {
            border: none;
            background: none;
            color: hsl(234, 11%, 52%);
            
            &:not(:disabled) {
                color: inherit;
                transition: .2s;
            }

            &:focus-visible {
                outline: 2px solid var(--focus-primary);
                outline-offset: 2px;
                transition: .2s;
            }

            &:hover:not(:disabled) {
                color: var(--hover-primary);
                transition: .2s;
            }
        }

    }
}

fieldset {    
    border: none;
    padding: 1.125rem 1.375rem;
    border-radius: .375rem;
    font-size: clamp(.875rem, 3vw, 1.125rem);
    background: var(--bg-primary);
    color: var(--text-tertiary);
    display: flex;
    justify-content: center;
    gap: 1rem;
    font-weight: 700;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    transition: .2s;

    legend {
        display: none;
    }

    input:checked + label {
        color: var(--blue);
        transition: .2s;
    }

    input:focus-visible + label {
        outline: 2px solid var(--focus-primary);
        outline-offset: 2px;
        transition: .2s;
    }

    input:hover + label {
        color: var(--hover-primary);
        cursor: pointer;
        transition: .2s;
    }

    input {
        position: absolute;
        opacity: 0;
    }
}

@media screen and (min-width: 600px) {
    .tasks-buttons-wrapper {
        margin: unset;
    }

    main, .tasks-container {
        position: relative;
    }

    fieldset {
        position: absolute;
        bottom: 2.5rem;
        width: fit-content;
        z-index: 0;
        left: 0;
        right: 0;
        margin: auto;
        box-shadow: unset;
    }
}